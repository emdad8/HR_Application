create table Employee(

[EmployeeID] int identity(1,1) not null,
[FirstName] varchar(50) not null,
[LastName] varchar(50) not null,
[Division] varchar(20) null,
[Building] varchar(50) null,
[Title] varchar(50) null,
[Room] varchar(20) null

constraint [pk_Employee] primary key([EmployeeID])

); 




set IDENTITY_INSERT Employee Off;

insert into Employee values ('Emdadul','Haque','SSD','Mirpur',null,null);

select*from Employee;

create procedure getEmployees
as
begin
    select*from Employee
end

exec getEmployees;

create procedure sp_InsertEmp
@FirstName varchar(50),
@LastName varchar(50),
@Division varchar(20)=null,
@Building varchar(50)=null,
@Title varchar(50)=null,
@Room varchar(20)=null
as
begin
  insert into Employee values (@FirstName,@LastName,@Division,@Building,@Title,@Room) 
end

create procedure sp_DelEmp
@EmpId int
as
begin
  delete from Employee where EmployeeID=@EmpId
end

select*from Employee;

•	List Employees
Use the ListEmployees option to retrieve employee information. This function lists information such as Employee ID, First Name, Last Name, Division, Building, Title and Room.
•	Search By Employee ID
Use the primary key (which is the Employee ID) to search for a particular employee.
•	Update Employee Record
You can update employee records, using the Update Employee Record function. First, search for employees, based on the name of the employee. You can then update employee details in the record, such as First Name, Last Name, Division, Building, Title and Room. using the UpdateEmployee function.
Use the DELETE function to delete the entire employee record from the database.
•	Delete Employee Record
You can delete employee records, using the DeleteEmployee   function.
•	Import XML Data
Impart the attached XML file and store it in the database using JDBC collection and show it in the User Interface.

-- git commands

- git init
- git config user.name "emdad"
- git config user.email "emdad8@gmail.com"

